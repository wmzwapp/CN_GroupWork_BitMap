<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>Introduction</class>
 <widget class="QWidget" name="Introduction">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>500</width>
    <height>700</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Form</string>
  </property>
  <layout class="QVBoxLayout" name="verticalLayout">
   <item>
    <widget class="QTextBrowser" name="textBrowser">
     <property name="html">
      <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'SimSun'; font-size:9pt; font-weight:400; font-style:normal;&quot;&gt;
&lt;p align=&quot;justify&quot; style=&quot; margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:30px; background-color:#ffffff;&quot;&gt;&lt;span style=&quot; font-family:'Microsoft YaHei','Helvetica','Arial','Lucida Grande','Tahoma','sans-serif'; font-size:16px; color:#444444; background-color:#ffffff;&quot;&gt;      位图协议是在OSI模型的媒体访问控制(MAC)层中运行的无冲突协议。它解决了多个站点争夺共享信道进行传输时发生冲突的任何可能性。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;justify&quot; style=&quot; margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:30px; background-color:#ffffff;&quot;&gt;&lt;span style=&quot; font-family:'Microsoft YaHei','Helvetica','Arial','Lucida Grande','Tahoma','sans-serif'; font-size:16px; color:#444444; background-color:#ffffff;&quot;&gt;      在该协议中，如果一个站希望发送，它会在实际发送之前进行广播。这是预留协议的一个示例。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;justify&quot; style=&quot; margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:30px; background-color:#ffffff;&quot;&gt;&lt;span style=&quot; font-family:'Microsoft YaHei','Helvetica','Arial','Lucida Grande','Tahoma','sans-serif'; font-size:12pt; font-weight:600; color:#444444; background-color:#ffffff;&quot;&gt;工作准则&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;justify&quot; style=&quot; margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:30px; background-color:#ffffff;&quot;&gt;&lt;span style=&quot; font-family:'Microsoft YaHei','Helvetica','Arial','Lucida Grande','Tahoma','sans-serif'; font-size:16px; color:#444444; background-color:#ffffff;&quot;&gt;      在该协议中，竞争周期被划分为N个时隙，其中N是共享信道的站点总数。如果一个站有要发送的帧，它将在时隙中设置相应的位。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;justify&quot; style=&quot; margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:30px; background-color:#ffffff;&quot;&gt;&lt;span style=&quot; font-family:'Microsoft YaHei','Helvetica','Arial','Lucida Grande','Tahoma','sans-serif'; font-size:16px; color:#444444; background-color:#ffffff;&quot;&gt;      假设有10个工作站。因此，争用时隙的数量将为10。如果站点2、3、8和9希望进行发送，则它们会将对应的时隙设置为1。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;justify&quot; style=&quot; margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:30px; background-color:#ffffff;&quot;&gt;&lt;span style=&quot; font-family:'Microsoft YaHei','Helvetica','Arial','Lucida Grande','Tahoma','sans-serif'; font-size:16px; color:#444444; background-color:#ffffff;&quot;&gt;      每个工作站宣布自己是否要发送后，其中一个便会根据商定的标准获得频道。通常，该标准为按照时隙号的顺序进行发送。在传输开始之前，每个站点都完全知道是否每个其他站点都想发送。因此，消除了所有碰撞的可能性。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;justify&quot; style=&quot; margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:30px; background-color:#ffffff;&quot;&gt;&lt;span style=&quot; font-family:'Microsoft YaHei','Helvetica','Arial','Lucida Grande','Tahoma','sans-serif'; font-size:12pt; font-weight:600; color:#444444; background-color:#ffffff;&quot;&gt;性能分析&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;justify&quot; style=&quot; margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:30px; background-color:#ffffff;&quot;&gt;&lt;span style=&quot; font-family:'Microsoft YaHei','Helvetica','Arial','Lucida Grande','Tahoma','sans-serif'; font-size:16px; color:#444444; background-color:#ffffff;&quot;&gt;      通常，编号较高的站在开始发送之前必须等待一半站点的扫描，即0.5N时隙。低编号的站必须平均等待1.5N个时隙。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;justify&quot; style=&quot; margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:30px; background-color:#ffffff;&quot;&gt;&lt;span style=&quot; font-family:'Microsoft YaHei','Helvetica','Arial','Lucida Grande','Tahoma','sans-serif'; font-size:16px; color:#444444; background-color:#ffffff;&quot;&gt;      该协议在高负载下效果最佳。在高负载期间，如果所有站点都希望发送，则N位争用时间分布在所有站点上。因此，开销仅为每帧1位竞争时间。如果d是数据传输时间，则效率为d/(d+1)。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;justify&quot; style=&quot; margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:30px; background-color:#ffffff;&quot;&gt;&lt;span style=&quot; font-family:'Microsoft YaHei','Helvetica','Arial','Lucida Grande','Tahoma','sans-serif'; font-size:16px; color:#444444; background-color:#ffffff;&quot;&gt;      但是，在低负载期间，如果仅需传输一个站，则争用时间必须仅由该站承担。开销变成每帧N位竞争时间。效率下降到d/(N+d)。&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
     </property>
    </widget>
   </item>
  </layout>
 </widget>
 <resources/>
 <connections/>
</ui>
